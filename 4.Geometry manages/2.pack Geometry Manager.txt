pack is one of the oldest and most used layout manager in Python’s TKInter package. When you use this pack() method on a widget,
you don’t need to explicitly specify the position of that widget, pack automatically places the widget in window based upon the space 
available in the window.

You can use pack when your layout only consists of a group of items all aligned horizontally or vertically, mostly in case of a 
navigation menu or something like that.

Anyway we will go with step by step to understand usage of pack:
===============================================================

from Tkinter import *

mainwin = Tk()

Label(mainwin, text="Red Sun", bg="red", fg="white").pack()
Label(mainwin, text="Green Grass", bg="green", fg="black").pack()
Label(mainwin, text="Blue Sky", bg="blue", fg="white").pack()

mainwin.mainloop()

(In our example, we have packed three labels into the parent widget "mainwin". We used pack() without any options. 
So pack had to decide which way to arrange the labels. As you can see, it has chosen to place the label widgets on top of each other
and centre them. )
Reference for Output: https://www.python-course.eu/tkinter_layout_management.php

--------------------------------------------------------------
In above example we gone through default option of a pack.
But pack() has 3 options to use they are: 
        fill
        expand
        side


fill:
=====
  If you want to make the widgets as wide as the parent widget, you have to use the fill=X option:
  
from Tkinter import *

mainwin = Tk()

w = Label(mainwin, text="Red Sun", bg="red", fg="white")
w.pack(fill=X)
w = Label(mainwin, text="Green Grass", bg="green", fg="black")
w.pack(fill=X)
w = Label(mainwin, text="Blue Sky", bg="blue", fg="white")
w.pack(fill=X)

mainwin.mainloop()
---------------------------------------------------------------------------------------------------


